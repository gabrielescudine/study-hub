{"ast":null,"code":"import validate from './validate.js';\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr) {\n  let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr) {\n  let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  const uuid = unsafeStringify(arr, offset);\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","map":{"version":3,"names":["validate","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","toLowerCase","stringify","uuid","TypeError"],"sources":["C:/Users/conta/OneDrive/Documentos/Programação/Estudos/curso-alura/React Como os Componentes Funcionam/node_modules/uuid/dist/esm-browser/stringify.js"],"sourcesContent":["import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,eAArB;AACA,MAAMC,SAAS,GAAG,EAAlB;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyB,EAAEA,CAA3B,EAA8B;EAC1BD,SAAS,CAACE,IAAV,CAAe,CAACD,CAAC,GAAG,KAAL,EAAYE,QAAZ,CAAqB,EAArB,EAAyBC,KAAzB,CAA+B,CAA/B,CAAf;AACH;;AACD,OAAO,SAASC,eAAT,CAAyBC,GAAzB,EAA0C;EAAA,IAAZC,MAAY,uEAAH,CAAG;EAC7C,OAAO,CAACP,SAAS,CAACM,GAAG,CAACC,MAAM,GAAG,CAAV,CAAJ,CAAT,GACJP,SAAS,CAACM,GAAG,CAACC,MAAM,GAAG,CAAV,CAAJ,CADL,GAEJP,SAAS,CAACM,GAAG,CAACC,MAAM,GAAG,CAAV,CAAJ,CAFL,GAGJP,SAAS,CAACM,GAAG,CAACC,MAAM,GAAG,CAAV,CAAJ,CAHL,GAIJ,GAJI,GAKJP,SAAS,CAACM,GAAG,CAACC,MAAM,GAAG,CAAV,CAAJ,CALL,GAMJP,SAAS,CAACM,GAAG,CAACC,MAAM,GAAG,CAAV,CAAJ,CANL,GAOJ,GAPI,GAQJP,SAAS,CAACM,GAAG,CAACC,MAAM,GAAG,CAAV,CAAJ,CARL,GASJP,SAAS,CAACM,GAAG,CAACC,MAAM,GAAG,CAAV,CAAJ,CATL,GAUJ,GAVI,GAWJP,SAAS,CAACM,GAAG,CAACC,MAAM,GAAG,CAAV,CAAJ,CAXL,GAYJP,SAAS,CAACM,GAAG,CAACC,MAAM,GAAG,CAAV,CAAJ,CAZL,GAaJ,GAbI,GAcJP,SAAS,CAACM,GAAG,CAACC,MAAM,GAAG,EAAV,CAAJ,CAdL,GAeJP,SAAS,CAACM,GAAG,CAACC,MAAM,GAAG,EAAV,CAAJ,CAfL,GAgBJP,SAAS,CAACM,GAAG,CAACC,MAAM,GAAG,EAAV,CAAJ,CAhBL,GAiBJP,SAAS,CAACM,GAAG,CAACC,MAAM,GAAG,EAAV,CAAJ,CAjBL,GAkBJP,SAAS,CAACM,GAAG,CAACC,MAAM,GAAG,EAAV,CAAJ,CAlBL,GAmBJP,SAAS,CAACM,GAAG,CAACC,MAAM,GAAG,EAAV,CAAJ,CAnBN,EAmB0BC,WAnB1B,EAAP;AAoBH;;AACD,SAASC,SAAT,CAAmBH,GAAnB,EAAoC;EAAA,IAAZC,MAAY,uEAAH,CAAG;EAChC,MAAMG,IAAI,GAAGL,eAAe,CAACC,GAAD,EAAMC,MAAN,CAA5B;;EACA,IAAI,CAACR,QAAQ,CAACW,IAAD,CAAb,EAAqB;IACjB,MAAMC,SAAS,CAAC,6BAAD,CAAf;EACH;;EACD,OAAOD,IAAP;AACH;;AACD,eAAeD,SAAf"},"metadata":{},"sourceType":"module"}