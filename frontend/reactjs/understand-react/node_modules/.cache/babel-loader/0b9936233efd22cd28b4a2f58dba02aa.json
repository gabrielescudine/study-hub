{"ast":null,"code":"import parse from './parse.js';\nimport { unsafeStringify } from './stringify.js';\nexport function stringToBytes(str) {\n  str = unescape(encodeURIComponent(str));\n  const bytes = new Uint8Array(str.length);\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes[i] = str.charCodeAt(i);\n  }\n\n  return bytes;\n}\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(version, hash, value, namespace, buf, offset) {\n  const valueBytes = typeof value === 'string' ? stringToBytes(value) : value;\n  const namespaceBytes = typeof namespace === 'string' ? parse(namespace) : namespace;\n\n  if (typeof namespace === 'string') {\n    namespace = parse(namespace);\n  }\n\n  if (namespace?.length !== 16) {\n    throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n  }\n\n  let bytes = new Uint8Array(16 + valueBytes.length);\n  bytes.set(namespaceBytes);\n  bytes.set(valueBytes, namespaceBytes.length);\n  bytes = hash(bytes);\n  bytes[6] = bytes[6] & 0x0f | version;\n  bytes[8] = bytes[8] & 0x3f | 0x80;\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = bytes[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(bytes);\n}","map":{"version":3,"names":["parse","unsafeStringify","stringToBytes","str","unescape","encodeURIComponent","bytes","Uint8Array","length","i","charCodeAt","DNS","URL","v35","version","hash","value","namespace","buf","offset","valueBytes","namespaceBytes","TypeError","set"],"sources":["C:/Users/conta/OneDrive/Documentos/Programação/Estudos/curso-alura/React Como os Componentes Funcionam/node_modules/uuid/dist/esm-browser/v35.js"],"sourcesContent":["import parse from './parse.js';\nimport { unsafeStringify } from './stringify.js';\nexport function stringToBytes(str) {\n    str = unescape(encodeURIComponent(str));\n    const bytes = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; ++i) {\n        bytes[i] = str.charCodeAt(i);\n    }\n    return bytes;\n}\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(version, hash, value, namespace, buf, offset) {\n    const valueBytes = typeof value === 'string' ? stringToBytes(value) : value;\n    const namespaceBytes = typeof namespace === 'string' ? parse(namespace) : namespace;\n    if (typeof namespace === 'string') {\n        namespace = parse(namespace);\n    }\n    if (namespace?.length !== 16) {\n        throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    }\n    let bytes = new Uint8Array(16 + valueBytes.length);\n    bytes.set(namespaceBytes);\n    bytes.set(valueBytes, namespaceBytes.length);\n    bytes = hash(bytes);\n    bytes[6] = (bytes[6] & 0x0f) | version;\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = bytes[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(bytes);\n}\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,OAAO,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;EAC/BA,GAAG,GAAGC,QAAQ,CAACC,kBAAkB,CAACF,GAAD,CAAnB,CAAd;EACA,MAAMG,KAAK,GAAG,IAAIC,UAAJ,CAAeJ,GAAG,CAACK,MAAnB,CAAd;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,GAAG,CAACK,MAAxB,EAAgC,EAAEC,CAAlC,EAAqC;IACjCH,KAAK,CAACG,CAAD,CAAL,GAAWN,GAAG,CAACO,UAAJ,CAAeD,CAAf,CAAX;EACH;;EACD,OAAOH,KAAP;AACH;AACD,OAAO,MAAMK,GAAG,GAAG,sCAAZ;AACP,OAAO,MAAMC,GAAG,GAAG,sCAAZ;AACP,eAAe,SAASC,GAAT,CAAaC,OAAb,EAAsBC,IAAtB,EAA4BC,KAA5B,EAAmCC,SAAnC,EAA8CC,GAA9C,EAAmDC,MAAnD,EAA2D;EACtE,MAAMC,UAAU,GAAG,OAAOJ,KAAP,KAAiB,QAAjB,GAA4Bd,aAAa,CAACc,KAAD,CAAzC,GAAmDA,KAAtE;EACA,MAAMK,cAAc,GAAG,OAAOJ,SAAP,KAAqB,QAArB,GAAgCjB,KAAK,CAACiB,SAAD,CAArC,GAAmDA,SAA1E;;EACA,IAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC;IAC/BA,SAAS,GAAGjB,KAAK,CAACiB,SAAD,CAAjB;EACH;;EACD,IAAIA,SAAS,EAAET,MAAX,KAAsB,EAA1B,EAA8B;IAC1B,MAAMc,SAAS,CAAC,kEAAD,CAAf;EACH;;EACD,IAAIhB,KAAK,GAAG,IAAIC,UAAJ,CAAe,KAAKa,UAAU,CAACZ,MAA/B,CAAZ;EACAF,KAAK,CAACiB,GAAN,CAAUF,cAAV;EACAf,KAAK,CAACiB,GAAN,CAAUH,UAAV,EAAsBC,cAAc,CAACb,MAArC;EACAF,KAAK,GAAGS,IAAI,CAACT,KAAD,CAAZ;EACAA,KAAK,CAAC,CAAD,CAAL,GAAYA,KAAK,CAAC,CAAD,CAAL,GAAW,IAAZ,GAAoBQ,OAA/B;EACAR,KAAK,CAAC,CAAD,CAAL,GAAYA,KAAK,CAAC,CAAD,CAAL,GAAW,IAAZ,GAAoB,IAA/B;;EACA,IAAIY,GAAJ,EAAS;IACLC,MAAM,GAAGA,MAAM,IAAI,CAAnB;;IACA,KAAK,IAAIV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwB,EAAEA,CAA1B,EAA6B;MACzBS,GAAG,CAACC,MAAM,GAAGV,CAAV,CAAH,GAAkBH,KAAK,CAACG,CAAD,CAAvB;IACH;;IACD,OAAOS,GAAP;EACH;;EACD,OAAOjB,eAAe,CAACK,KAAD,CAAtB;AACH"},"metadata":{},"sourceType":"module"}